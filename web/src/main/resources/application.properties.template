# 
# Copyright 2017 SoftAvail Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

# Connect timeout interval, in milliseconds.
# A value of zero (0) is equivalent to an interval of infinity.
# Default: 1500
client.timeout.connect=
# Read timeout interval, in milliseconds.
# A value of zero (0) is equivalent to an interval of infinity.
# Default: 1500
client.timeout.read=
# Automatic redirection.
# A value of true declares that the client will automatically redirect to the URI declared in 3xx responses.
# Default: true
client.followRedirects=
# Sets the delay between retries, exponentially backing off to the maxDelay
# and multiplying successive delays by a factor of 2.
# Default: 2
client.retry.delaySeconds=
# Sets the delay between retries, exponentially backing off to the maxDelay
# and multiplying successive delays by a factor of 2.
# Default: 60
client.retry.delayMaxSeconds=
# Sets the jitter to randomly vary retry delays by.
# For each retry delay, a random portion of the jitter will be added or subtracted to the delay.
# For example: a jitter of 100 milliseconds will randomly add between -100 and 100 milliseconds to each retry delay.
# Default: 500
client.retry.jitterMilliseconds=
# The number of threads to keep in the pool, even if they are idle
# Default: 10
task_dispatcher.thread_pool.size=
# The seconds to wait when shutting down the thread pool
# Default: 10
task_dispatcher.thread_pool.shutdown.delaySeconds=
# Delay when retrying task assignment
# Default: 10
queue.retry.delaySeconds=
# The delay before removing queue processor from the pool when in idle state
# Default: 10
queue.remove.idleDelaySeconds=
# When there is a optimistic lock retry the db request number of times
# Default: 10
jpa.optimisticLock.retryCount=
# Should we validate the expression when adding/updating skill
# Default: false
api.enableExpressionSkillValidation=
# Should we validate agent capabilities when adding/updating agent
# Default: false
api.enableAgentCapabilitiesValidation=
# Should we validate task requirements when adding task
# Default: false
api.enableTaskRequirementsValidation=
# The locations where Shiro configuration can be found
# Default: classpath:shiro.ini
shiro.configLocations=
